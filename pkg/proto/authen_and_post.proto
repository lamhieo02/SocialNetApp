syntax = "proto3";
option go_package = ".;authen_and_post";
package authen_and_post;

service AuthenticateAndPost {
  rpc CheckUserAuthentication(UserInfoLogin) returns (UserLoginResponse) {}
  rpc CreateUser(UserDetailInfo) returns (CreateUserResponse) {}
  rpc EditUser(UserEdit) returns (EditUserResponse) {}
  rpc GetUserFollower(UserFollowerRequest) returns (UserFollower) {}
  rpc GetPostDetail(GetPostRequest) returns (Post) {}
  rpc GetInfoUser(UserInfoRequest) returns (UserDetailInfo) {}
  //TODO: create more api
}

message UserInfoRequest {
    int64 user_id = 1;
}

message UserInfoLogin {
    string user_email = 1;
    string user_password = 2;
}

message UserEdit {
    uint32 id = 1;
    string first_name = 2;
    string last_name = 3;
    string dob = 4;
}

message UserDetailInfo {
    int64 user_id = 1;
    string user_name = 2;
    string first_name = 3;
    string last_name = 4;
    string dob = 5;
    string email = 6;
    string password = 7;
}

enum UserStatus{
    UserStatusOK = 0;
    NOT_FOUND = 1;
}

enum CreateUserStatus{
    CreateUserStatusOK = 0;
    EXISTED = 1;
}

enum EditUserStatus {
    EditUserStatusOK = 0;
    EditUserStatusNOT_FOUND = 1;
}

message UserLoginResponse {
    string sessionId = 1;
    UserStatus status = 2;
}

message CreateUserResponse {
    int64 user_id = 1;
    CreateUserStatus status = 2;
}

message EditUserResponse {
    UserStatus status = 1;
}

message UserFollowerRequest {
    string user_id = 1;
}

message UserFollowerResponse {
    string user_name = 1;
}

message UserFollower {
    repeated UserFollowerResponse followers = 1;
}

message GetPostRequest {
    int64 post_id = 1;
}

message Post {
    int64 post_id = 1;
    int64 user_id = 2;
    string content_text = 3;
    string content_image_path = 4;
    bool visible = 5;
    int64 created_at = 6;
}

message ResponseError {
    string error = 1;
    int32 code = 2;
}